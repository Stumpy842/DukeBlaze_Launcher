<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>